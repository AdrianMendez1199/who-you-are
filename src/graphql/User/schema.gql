type User {
  id: ID!
  name: String!
  username: String!
  lastname: String!
  userProfile: UserProfile!
}

type UserProfile {
  age: Int!
  bio: String!
  imgProfile: String!
}

type Query {
  user(id: ID!): [User!]!
}

type Mutation {
  createAccount(data: userInput!): User!
  inactiveAccount(id: Int!): User!
  login(data: login!): authPayloadUser!
  uploadProfile(userId: ID!, data: userProfileInput!): UserProfile!
}

input login {
  username: String!
  password: String!
}

input userProfileInput {
  age: Int!
  bio: String!
  imgProfile: String!
}

type authPayloadUser {
  token: String!
  user: User!
}

input userInput {
  name: String!
  lastname: String!
  username: String!
  password: String!
}
